A generic type is a class or interface that is parameterized over types. We use angle brackets (<>) to specify the type parameter.
class Demo<T> {
 // T stands for "Type" 
      private T t; 
      public void set(T t) { 
      this.t = t; 
     } 
     
     public T get()  { 
        return t;
     }
}
// Driver class
class GenericDemo { 
     public static void main (String[] args)   { 
             // instance of Integer type 
             Demo <Integer> iObj = new Demo<Integer>(); 
             iObj.set(25);
             System.out.println(iObj.get()); 
            // instance of String type 
           
Demo <String> sObj = new Demo<String>();
           sObj.set("Demo");
           System.out.println(sObj.get()); 
      } 
}
